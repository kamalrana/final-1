<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages" />
		<property name="cacheSeconds" value="3000" />
	</bean>
	
<!-- <context:component-scan> can also do what <context:annotation-config> does but 
<context:component-scan> also scans packages to find and register beans within the application context. -->
	
	<!-- Scans the classpath of this application for @Components to deploy as beans -->
	<context:component-scan base-package="controllers" />

<!-- <mvc:annotation-driven /> declares explicit support for annotation-driven MVC controllers 
(i.e. @RequestMapping, @Controller, although support for those is the default behaviour), 
as well as adding support for declrative validation via @Valid and message body marshalling 
with @RequestBody/ResponseBody -->
	
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>
